@model PagedList<LibrarySystem.Models.UserBooks>
@using X.PagedList;
@using X.PagedList.Mvc.Core;

@{
    ViewData["Title"] = "User's Books";
    var currentDay = DateOnly.FromDateTime(DateTime.Now);
    Layout = "_Layout";
}

<form asp-action="ViewUserBooks">
    <select name="status">
        <option value="">All</option>
        <option value="Returned">Returned</option>
        <option value="Unreturned">Unreturned</option>
    </select>
    Find by Title: @Html.TextBox("SearchResult", ViewBag.CurrentFilter as string)
        <input type="submit" value="Filter" />
</form>

<table class="table">
    <tr>
        <th> @Html.ActionLink("Book Title", "ViewUserBooks", new {sortOrder = ViewBag.TitleSort, currentFilter = ViewBag.CurrentFilter}) </th>
        <th> @Html.ActionLink("Genre", "ViewUserBooks", new {sortOrder = ViewBag.TitleSort, currentFilter = ViewBag.CurrentFilter}) </th>
        <th> @Html.ActionLink("Author", "ViewUserBooks", new {sortOrder = ViewBag.TitleSort, currentFilter = ViewBag.CurrentFilter}) </th>
        <th> Borrowed Date </th>
        <th> Due Date</th>
        <th> Returned Date </th>
        <th> Status </th>
    </tr>
    
       @foreach (var borrowed in Model)
        {
            <tr>
                <td>@borrowed.BookTitle</td>
                <td>@borrowed.Genre</td>
                <td>@borrowed.Author</td>
                <td>@borrowed.BorrowedDate</td>
                <td>@borrowed.DueDate</td>
                <td>@borrowed.ReturnedDate</td>
                @if (borrowed.DueDate > borrowed.ReturnedDate && borrowed.ReturnedDate != null)
                {
                    <td> Returned on Time </td>
                } 
                else if (borrowed.DueDate < borrowed.ReturnedDate && borrowed.ReturnedDate != null)
                {
                    <td> Book Returned Late </td>
                } else if (borrowed.DueDate < currentDay && borrowed.ReturnedDate == null){
                    <td> Book is Overdue</td>
                } else
                {
                    <td> Pending </td>
                }
                @if (borrowed.ReturnedDate == null && User.IsInRole("Admin"))
                {
                    <td> @Html.ActionLink("Return Book", "ReturnBook", new { userID = borrowed.MemberID, bookID = borrowed.BookID })</td>
                }
            </tr>
        } 
</table>
</br>
@Html.PagedListPager(Model, page => Url.Action("ViewUserBooks", new {page}))